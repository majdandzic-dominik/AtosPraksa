//15)	Za jednu tvrtku potrebno je napraviti demo aplikaciju u kojoj æe moæi raditi 
//administraciju zaposlenika te njihbovih radnih zadataka. Ovo su im najbitniji podatci:
//Zaposlenici
//  ime
//  prezime
//  radno mjesto
//  oib
//
//Zadaci
//  naziv
//  opis
//  tip (bug, task)
//  trenutni status (otvoren, zatvoren, u tijeku)
//  kompleksnost (broj)
//  potrošeno vrijeme (sati)
//  poèetni datum i vrijeme
//  završni datum i vrijeme
//  (napomena, poèetak i završetak ne znaèe nužno da je potrošeno vrijeme njihova razlika)
//Potrebno je omoguæiti administraciju na nekoliko razina tj. potrebno je definirati korisnièka 
//prava korisnika aplikacije po grupama: "admin", "superuser" i "user" tako da se omoguæe sljedeæe akcije:
//o	kreiranje zadataka i zaposlenika (admin, superuser)
//o	izlistanje zadataka i zaposlenika (admin, superuser, user)
//o	izmjena zadataka i zaposlenika (admin)
//o	brisanje zadataka i zaposlenika (admin)
//Naposljetku aplikacija mora omoguæiti kreiranje izvještaja:
//o	po radnom mjestu tj. koliko radnika radi na pojedinom radnom mjestu
//o	utrošeno vrijeme po osobi
//o	najduže otvoren zadatak
//Izvještaje mogu kreirati samo korisnici s admin ili superuser pravima.
//Suèelje za komunikaciju s korisnicima neka bude konzola, a podaci se trebaju spremati u tekstualne datoteke ili bazu podataka po izboru.

package hr.atos.praksa.dominikmajdandzic.zadatak15;

public class Assignment15
{
	public static void main(String[] args)
	{

//		Worker admin = new Administrator(null, null, null, null);
//
//		WorkerController wc = new WorkerController();
//		TaskController tc = new TaskController();
//		ReportGenerator rg = new ReportGenerator();
//
//		System.out.print(tc.getTaskByName("z4").toString());
//		
//		tc.listAllTasks();
//		rg.printLongestOpenTask();
//		rg.printWorkplaceNumberOfWorkers();
		
		
	}
}
